<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="menu">
    <!-- 메뉴 전체 조회 - 재준 -->
<!--    <select id="findAll" resultType="menu">-->
<!--        select-->
<!--            *-->
<!--        from-->
<!--            menu-->
<!--    </select>-->

    <!-- 메뉴 식별번호로 메뉴 한개 조회 - 재준 -->
    <select id="findByNo" resultType="menu">
        select
            *
        from
            menu
        where
            no = #{no}
    </select>

    <!-- 메뉴 추가 - 재준 -->
    <insert id="insertMenu">
        insert into
            menu
        values (
            ('menu' || lpad(seq_menu_no.nextval,3,0)), #{restNo}, #{name}, #{content}, #{price}
        )
        <selectKey order="AFTER" resultType="string" keyProperty="no">
            select
                ('menu' || lpad(seq_menu_no.currval,3,0))
            from
                dual
        </selectKey>
    </insert>

    <!-- 메뉴 수정 - 재준 -->
    <update id="updateMenu">
        update
            menu
        set
            name = #{name}
            , content = #{content}
            , price = #{price}
        where
            no = #{no}
    </update>

    <!-- 메뉴 삭제 -->
    <delete id="deleteMenu">
        delete from
            menu
        where
            no = #{no}
    </delete>

    <!-- 메뉴 이름으로 식당 식별번호 조회 - 재준 -->
    <select id="findByName" resultType="String">
        select
            rest_no
        from
            menu
        where
            name = #{name}
    </select>

    <!-- 전체 게시물 조회 - 정호 -->
    <select id="getTotalCount" resultType="_int">
        select
            count(*)
        from
            restaurant
        <where>
            <if test="searchKeyword != null and searchKeyword != ''">
                category like '%' || #{searchKeyword} || '%'
            </if>
        </where>
    </select>

    <!-- 페이지 별 게시물 조회 - 정호 -->
    <select id="findAllPage" resultMap="restaurantVoMap">
        with rankedpictures as (
        select
            r.no as restaurant_no,
            r.name as restaurant_name,
            r.address as restaurant_address,
            r.category as restaurant_category,
            p.renamed_filename,
            row_number() over (partition by r.no order by p.renamed_filename) as rn
        from
            restaurant r
                left join menu m on r.no = m.rest_no
                left join menu_picture p on m.no = p.menu_no
        )
        select
            restaurant_no as no,
            restaurant_name as name,
            restaurant_address as address,
            restaurant_category as category,
            renamed_filename
        from
            rankedpictures
        where
            rn = 1
        order by
            no desc, renamed_filename
    </select>
    <resultMap id="restaurantVoMap" type="restaurantVo">
        <id column="no" property="no"/>
        <result column="name" property="name"/>
        <result column="address" property="address"/>
        <result column="category" property="category"/>
        <collection property="menuPictures" ofType="menuPicture">
            <id column="pic_no" property="no"/>
            <result column="renamed_filename" property="renamedFilename"/>
        </collection>
    </resultMap>

    <select id="getTotalCount1" resultType="_int">
        select
            count(*)
        from
            restaurant r left join menu m
                on r.no = m.rest_no
            left join menu_picture p
                on m.no = p.menu_no
    </select>
</mapper>